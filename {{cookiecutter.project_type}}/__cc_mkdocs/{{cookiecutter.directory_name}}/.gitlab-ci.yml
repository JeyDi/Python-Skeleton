cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip

stages:
  - test
  - package
  - deploy
  - docs

test:core:
  stage: test
  image: "python:3.8-slim-buster"
  variables:
    PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip
    PYTHONPATH: $PWD
  before_script:
    - pip install -U pip
    - pip install pytest
    - pip install -r requirements.txt
  script:
    - pytest ./tests

image:api:
  stage: package
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: api
    PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG -f Dockerfile_api .
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG

image:etl:
  stage: package
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: etl
    PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG -f Dockerfile_cron .
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG

trigger-deploy:develop:
  stage: deploy
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
  script:
    - "curl -X POST -F token=565fcbd9c0f088ecac2f37252b4565 -F ref=develop https://gitlab.com/api/v4/projects/19793294/trigger/pipeline"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

    # Deploy gitlab pages with documentation
pages:
  image: python:3.8-buster
  stage: docs
  script:
    - pip install -r reqtest.txt
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
