[tool.poetry]
name = "{{ cookiecutter.project }}"
version = "0.1.0"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author }}"]
license = "{{ cookiecutter.open_source_license }}"
homepage = ""
repository = ""
documentation = ""

classifiers = [
    "Topic :: Streamlit",
    "Topic :: Dashboard",
    "Topic :: Example",
    "Topic :: Template"
]

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
numpy = "^1.21.2"
pytest = "^6.2.5"
requests = "^2.26.0"
pyaml = "^21.8.3"
pandas = "^1.3.3"
Unidecode = "^1.3.2"
matplotlib = "^3.5.1"
plotly = "^5.4.0"
streamlit = "^1.3.0"
watchdog = "^2.1.6"
python-dotenv = "^0.19.2"

[tool.poetry.dev-dependencies]
flake8 = "3.9.2"
flake8-isort = "4.0.0"
flake8-builtins = "1.5.3"
autopep8 = "1.5.7"
pylint = "2.8.2"
bandit = "1.7.0"
black = "21.5b0"
flake8-bandit = "2.1.2"
sqlalchemy-stubs = "^0.3"
pytest-cov = "^2.8.1"
autoflake = "^1.3.1"
ipython = "^7.27.0"
mypy = "^0.931"
streamlit = "^1.7.0"


[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120

[build-system]
requires = ["poetry-core>=1.1.13"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
markers = [
    "functions: mark test for the base functionalities",
    "core: all about the core",
    "db: all about the database",
    "api: all about the api of the system",
]